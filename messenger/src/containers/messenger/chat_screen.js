import React from "react";
import {
  Box,
  Grid,
  IconButton,
  InputAdornment,
  OutlinedInput,
  Paper,
  Typography,
} from "@mui/material";
import CssBaseline from "@mui/material/CssBaseline";
import useWindowSize from "../../customhooks/screensizehook";
import UserHeaderComponent from "../../components/user_header";
import SentimentSatisfiedSharpIcon from "@mui/icons-material/SentimentSatisfiedSharp";
import AttachFileIcon from "@mui/icons-material/AttachFile";
import SendIcon from "@mui/icons-material/Send";

const ChatScreen = ({ setChatScreenToggle }) => {
  const windowSize = useWindowSize();
  const [bottomNavWidth, setBottomNavWidth] = React.useState(0);

  const [messages, setMessages] = React.useState([
    {
      primary: "Brunch this week?",
      secondary:
        "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Birthday Gift",
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: "/static/images/avatar/1.jpg",
    },
    {
      primary: "Recipe to try",
      secondary:
        "I am try out this new BBQ recipe, I think this might be amazing",
      person: "/static/images/avatar/2.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Brunch this week?",
      secondary:
        "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Birthday Gift",
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: "/static/images/avatar/1.jpg",
    },
    {
      primary: "Recipe to try",
      secondary:
        "I am try out this new BBQ recipe, I think this might be amazing",
      person: "/static/images/avatar/2.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Discussion",
      secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Brunch this week?",
      secondary:
        "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Birthday Gift",
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: "/static/images/avatar/1.jpg",
    },
    {
      primary: "Recipe to try",
      secondary:
        "I am try out this new BBQ recipe, I think this might be amazing",
      person: "/static/images/avatar/2.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Brunch this week?",
      secondary:
        "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Birthday Gift",
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: "/static/images/avatar/1.jpg",
    },
    {
      primary: "Recipe to try",
      secondary:
        "I am try out this new BBQ recipe, I think this might be amazing",
      person: "/static/images/avatar/2.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Discussion",
      secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Brunch this week?",
      secondary:
        "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Birthday Gift",
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: "/static/images/avatar/1.jpg",
    },
    {
      primary: "Recipe to try",
      secondary:
        "I am try out this new BBQ recipe, I think this might be amazing",
      person: "/static/images/avatar/2.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Brunch this week?",
      secondary:
        "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Birthday Gift",
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: "/static/images/avatar/1.jpg",
    },
    {
      primary: "Recipe to try",
      secondary:
        "I am try out this new BBQ recipe, I think this might be amazing",
      person: "/static/images/avatar/2.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Discussion",
      secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Yes!",
      secondary: "I have the tickets to the ReactConf for this year.",
      person: "/static/images/avatar/3.jpg",
    },
    {
      primary: "Discussion",
      secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
      person: "/static/images/avatar/5.jpg",
    },
    {
      primary: "Summer BBQ",
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grillhhhh.`,
      person: "/static/images/avatar/1.jpg",
    },
  ]);
  React.useEffect(() => {
    if (windowSize.width > 1200) {
      setBottomNavWidth(windowSize.width - windowSize.width / 4);
    } else if (windowSize.width > 900) {
      setBottomNavWidth(windowSize.width - windowSize.width / 3);
    } else {
      setBottomNavWidth(windowSize.width);
    }
  }, [windowSize.width]);
  return (
    <Box
      sx={{ pb: 7, pt: 10, maxHeight: windowSize.height, overflowY: "auto" }}>
      <CssBaseline />
      <Grid container sx={{ float: "left" }}>
        {messages.map(({ primary, secondary, person }, index) => (
          <Grid item xs={12} sx={{ textAlign: "left" }}>
            {index % 2 === 0 ? (
              <Paper
                sx={{
                  float: "left",
                  backgroundColor: "#0288d1",
                  mt: 3,
                  mr: 6,
                }}>
                <Typography key={index} sx={{ p: 2 }}>
                  {secondary}
                </Typography>
              </Paper>
            ) : (
              <Paper
                sx={{
                  float: "right",
                  backgroundColor: "#F8F8F8",
                  mt: 3,
                  ml: 6,
                }}>
                <Typography key={index} sx={{ p: 2, textAlign: "right" }}>
                  {secondary}
                </Typography>
              </Paper>
            )}
          </Grid>
        ))}
      </Grid>

      <Paper
        sx={{
          position: "fixed",
          top: 0,
          width: bottomNavWidth,
          right: 0,
          maxHeight: 200,
          overflow: "auto",
        }}
        elevation={3}>
        <UserHeaderComponent
          primary={"Manish Sharma"}
          avatarHeight={56}
          avatarWidth={56}
          avatarMarginLeft={2}
          secondary="Status"
          showEdit={false}
          setChatScreenToggle={setChatScreenToggle}
        />
      </Paper>
      <Box
        sx={{
          position: "fixed",
          bottom: 0,
          width: bottomNavWidth,
          right: 0,

          maxHeight: 200,
          overflow: "auto",
        }}
        elevation={5}>
        <OutlinedInput
          placeholder="Type Message ..."
          id="outlined-adornment-password"
          type={"text"}
          sx={{ borderRadius: "40px", backgroundColor: "white" }}
          fullWidth={true}
          startAdornment={
            <InputAdornment position="start">
              <IconButton aria-label="toggle password visibility" edge="end">
                <SentimentSatisfiedSharpIcon />
              </IconButton>
            </InputAdornment>
          }
          endAdornment={
            <InputAdornment position="end">
              <IconButton aria-label="toggle password visibility" edge="end">
                <>
                  <AttachFileIcon />
                </>
              </IconButton>
              <IconButton aria-label="toggle password visibility" edge="end">
                <>
                  <SendIcon
                    sx={{
                      bgcolor: "#0288d1",
                      borderRadius: "20px",
                      fontSize: "35px",
                      padding: "2px",
                    }}
                  />
                </>
              </IconButton>
            </InputAdornment>
          }
        />
      </Box>
    </Box>
  );
};

export default ChatScreen;
